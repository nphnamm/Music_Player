<!DOCTYPE html>
<html lang="en">
<head>
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Music player</title>
    <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/5.15.2/css/all.min.css" integrity="sha512-HK5fgLBL+xu6dm/Ii3z4xhlSUyZgTT9tuc/hSrtw6uzJOvgRr2a9jyxxT1ely+B+xFAmJKVSTbpM/CuL7qxO8w==" crossorigin="anonymous" />
    <link rel="preconnect" href="https://fonts.gstatic.com">
    <link href="https://fonts.googleapis.com/css2?family=Poppins:wght@300;400;600&display=swap" rel="stylesheet">
    <link rel="stylesheet" href="/assets/css/style.css">
    
</head>
<body>

<div class="player">
  <!-- Dashboard -->
  <div class="dashboard">
    <!-- Header -->
    <header>
      <h4>Now playing:</h4>
      <h2>String 57th & 9th</h2>
    </header>

    <!-- CD -->
    <div class="cd">
      <div class="cd-thumb" style="background-image: url('https://i.ytimg.com/vi/jTLhQf5KJSc/maxresdefault.jpg')">
      </div>
    </div>

    <!-- Control -->
    <div class="control">
      <div class="btn btn-repeat">
        <i class="fas fa-redo"></i>
      </div>
      <div class="btn btn-prev">
        <i class="fas fa-step-backward"></i>
      </div>
      <div class="btn btn-toggle-play">
        <i class="fas fa-pause icon-pause"></i>
        <i class="fas fa-play icon-play"></i>
      </div>
      <div class="btn btn-next">
        <i class="fas fa-step-forward"></i>
      </div>
      <div class="btn btn-random">
        <i class="fas fa-random"></i>
      </div>
    </div>

    <input id="progress" class="progress" type="range" value="0" step="1" min="0" max="100">

    <audio id="audio" src=""></audio>
  </div>

  <!-- Playlist -->
  <div class="playlist">
  

  
  </div>
</div>

<!-- Design from: https://static.collectui.com/shots/3671744/musicloud-revolutionary-app-for-music-streaming-large -->

    <script>
        // 1. Render songs
        // 2. Scroll top
        // 3. Play/Pause/seek 
        // 4. Cd rorate 
        // 5. Next/ prev 
        // 6. Randoom
        // 7. Next/Repeat when ended
        // 8. Active song 
        // 9. Scroll active song into view 
        // 10. Play song when click 

        const $ = document.querySelector.bind(document)
        const $$ = document.querySelectorAll.bind(document);

        const player = $('.player')
        const playlist = $('.playlist')
        const cd = $('.cd')
        const heading = $('header h2')
        const cdThumb = $('.cd-thumb')
        const audio = $('#audio')
        const playBtn = $('.btn-toggle-play')
        const progress = $('#progress')
        const nextBtn = $('.btn-next')
        const prevBtn = $('.btn-prev')
        const randomBtn = $('.btn-random')
        const repeatBtn = $('.btn-repeat')
        const app ={
          currentIndex :0,
          isPlaying: false,
          isRandom:false,
          isRepeat:false,
            songs :[
              {
                name: 'Nevada',
                singer: 'Vicetone',
                path: './assets/music/song1.mp3',
                image: '/assets/img/song1.png'

              },
              {
                name: 'SummerTime',
                singer: 'K-391',
                path: './assets/music/song2.mp3',
                image: 'assets/img/song2.png'

              },
              {
                name: 'Nobody',
                singer: 'TheFatRat',
                path: './assets/music/song3.mp3',
                image: 'assets/img/song3.png'

              },
              {
                name: 'Reality',
                singer: 'Lost Frequencies',
                path: './assets/music/song4.mp3',
                image: 'assets/img/song4.png'

              },
              {
                name: 'Sugar',
                singer: 'Maroon 5',
                path: './assets/music/song5.mp3',
                image: 'assets/img/song5.png'

              },
              {
                name: 'My Love',
                singer: 'Westlife',
                path: './assets/music/song6.mp3',
                image: 'assets/img/song6.png'

              },
              {
                name: 'Attention',
                singer: 'Charlie Puth',
                path: './assets/music/song7.mp3',
                image: 'assets/img/song7.png'

              },
              {
                name: 'Monster',
                singer: 'Katie Sky',
                path: './assets/music/song8.mp3',
                image: 'assets/img/song8.png'

              },
              {
                name: 'Turn Back Time',
                singer: 'Daniel Schulz',
                path: './assets/music/song9.mp3',
                image: 'assets/img/song9.png'

              },
              {
                name: 'Imagination',
                singer: 'Vicetone',
                path: './assets/music/song10.mp3',
                image: 'assets/img/song10.png'

              },


            ],
        
        render: function(){
          const htmls = this.songs.map((song,index) =>{
            return ` 
              <div class="song ${index === this.currentIndex ? 'active' : ''}">
                <div class="thumb" style="background-image: url('${song.image}')">
                </div>
                <div class="body">
                  <h3 class="title">${song.name}</h3>
                  <p class="author">${song.singer}</p>
                </div>
                <div class="option">
                  <i class="fas fa-ellipsis-h"></i>
                </div>
              </div>
              `

          })
          playlist.innerHTML = htmls.join('');


        },
        defineProperties: function(){
            Object.defineProperty(this,'currentSong', {
                get: function(){
                  return this.songs[this.currentIndex]
                
                
                }
            });


        },
        handleEvents: function(){
          const _this = this;
          const cdWidth = cd.offsetWidth
          
          //handle CD rotate/ pause 
          //** Animate api 


          const cdThumbAnimate = cdThumb.animate([
            {transform: 'rotate(360deg)'}
          ],{
            duration:10000,
            iterations:Infinity
          })
          cdThumbAnimate.pause();

          //handle when zoom in/ zoom out
          document.onscroll = function(){
            const scrollTop = window.scrollY || document.documentElement.scrollTop
            console.log(scrollTop);
            const newCdWidth = cdWidth - scrollTop

            cd.style.width = newCdWidth > 0 ? newCdWidth + 'px' :0 ;

          }
          //handle when click play button 
          playBtn.onclick = function(){
            if(_this.isPlaying){
              audio.pause();
           

            }else{
              audio.play();
           
            }
           
  
          }


          //When the song is playing 
          audio.onplay = function(){
            _this.isPlaying =true;
            player.classList.add('playing');
            cdThumbAnimate.play();
          }

          //When the song is pausing 
          audio.onpause = function(){
            _this.isPlaying= false;
              player.classList.remove('playing')
              cdThumbAnimate.pause();
          }
          //When time of the song has changed 
          audio.ontimeupdate = function(){

            if(audio.duration){
              const progressPercent = Math.floor(audio.currentTime / audio.duration * 100)
              progress.value = progressPercent
            }
           
          }

          //Handle when change time of the song 
          progress.onchange = function(e){
            console.log()

            const seekTime = audio.duration * e.target.value / 100;
            audio.currentTime = seekTime;
          }

          //When click next song
          nextBtn.onclick = function(){
            if(_this.isRandom){
              _this.playRandomSong();
            }else{
              _this.nextSong();
            }
            
            audio.play();
            _this.render();
            _this.scrollToActiceSong()
          }
          //When click previous song
          prevBtn.onclick = function(){


            if(_this.isRandom){
              _this.playRandomSong();
            }else{
              _this.prevSong();
            }
            
           
            audio.play();
            _this.render();
            _this.scrollToActiceSong();
          }
          //When click random button
          randomBtn.onclick = function(){
            _this.isRandom = !_this.isRandom
            
            randomBtn.classList.toggle('active',_this.isRandom);
            

          }
          //handle next song when audio ended
          audio.onended = function (){
            if(_this.isRepeat){
              audio.play()
            }else{
              nextBtn.click();
            }
          }

          repeatBtn.onclick = function(e){
            _this.isRepeat =! _this.isRepeat
            repeatBtn.classList.toggle('active',_this.isRepeat);
          }
          

          //
          playlist.onclick = function(e){
            if(
              e.target.closest('.song:not(.active)') &&
              !e.target.closest('.option')

            ){

              console.log
            }
          }


        },
        loadCurrentSong: function(){

        
          heading.textContent = this.currentSong.name
          cdThumb.style.backgroundImage = `url('${this.currentSong.image}')`
          audio.src = this.currentSong.path
          

        },
        scrollToActiceSong: function(){
          setTimeout(() =>{
            $('.song.active').scrollIntoView({
              behavior:'smooth',
              block:'nearest',
            })
          },300)
        }
        ,
        
        nextSong: function(){
          this.currentIndex++;

          if(this.currentIndex >= this.songs.length)
          this.currentIndex =0;

          
          this.loadCurrentSong();
        },
        prevSong: function(){
          this.currentIndex--;

          if(this.currentIndex < 0)
          this.currentIndex =this.songs.length - 1;

          
          this.loadCurrentSong();
        },
        playRandomSong: function(){
          let newIndex
          do{

            newIndex = Math.floor(Math.random() *this.songs.length);
            console.log(newIndex);
            console.log(this.currentIndex);
          }while(newIndex === this.currentIndex)
          console.log(newIndex);
          console.log(this.currentIndex);
          this.currentIndex = newIndex;
          console.log(this.currentIndex);
          this.loadCurrentSong();
        },
        // preSong: function(){
          
        // }
        
        start: function(){
          // Define attributes for object
          this.defineProperties()

          //Listening/ handle events (DOM events)
          this.handleEvents();

          // Load first song detail into UI(user interface) when run program 
          this.loadCurrentSong();


          // //Render Playlist 
          this.render();

        }
      
        }
        app.start()
        
    </script>
</body>
</html>




